%YAML 1.2
---
name: PEG.js
file_extensions: ['pegjs']
scope: source.pegjs

variables:
  identifier: '[A-Za-z_][A-Za-z_\$0-9]+'

contexts:

  prototype:
    
    - match: /\*
      scope: punctuation.definition.comment.begin
      push:
        - meta_scope: comment.block
        - meta_include_prototype: false
        - match: \*/
          scope: punctuation.definition.comment.end
          pop: true

    - match: //
      scope: comment.line.double-slash
      push:
        - meta_scope: comment.line
        - meta_include_prototype: false
        - match: \n
          pop: true

  main:
    - include: labeled
    - include: name
    - include: assignment
    - include: regex
    - include: predicate
    - include: quantifier
    - include: choice
    - include: javascript
    - include: string
    - include: eos

  labeled:
    - match: ({{identifier}})(:)
      captures:
        1: variable.other
        2: keyword.operator.assign

  name:
    - match: \b({{identifier}})\b
      scope: entity.name.function

  assignment:
    - match: '='
      scope: keyword.operator.rule

  regex:
    - match: \[
      scope: keyword.operator.regex
      push:
        - meta_include_prototype: false
        - match: \](i?)
          pop: true

  predicate:
    - match: (\$|&|!)
      scope: keyword.operator.predicate
      #set: javascript

  quantifier:
    - match: (\?|\*|\+)
      scope: keyword.operator.quantifier
    #  pop: true
    #- include: javascript

  choice:
    - match: '/'
      scope: keyword.operator.productiondivider

  javascript:
    - meta_include_prototype: false
    - match: \{
      scope: meta.block.js.begin
      push: javascript.sublime-syntax
      with_prototype:
        - match: \}
          scope: meta.block.js.end
          pop: true

  string:
    - match: ([\"\'])
      scope: punctuation.definition.string.quoted.begin
      push:
        - meta_include_prototype: false
        - meta_scope: string.quoted
        - match: \n
          scope: invalid.illegal.newline
          pop: true
        - match: \\u[0-9a-fA-F]{1,4}
          scope: constant.character.escape.unicode
          pop: true
        - match: \\.
          scope: constant.character.escape.untitled
        - match: \1
          scope: punctuation.definition.string.quoted.end
          pop: true

  eos:
    - match: ';'
      scope: punctuation.terminator.statement
      #pop: true
